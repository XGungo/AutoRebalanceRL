{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVOwAAAAAAAACMIXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5wb2xpY2llc5SMEUFjdG9yQ3JpdGljUG9saWN5lJOULg==",
        "__module__": "stable_baselines3.common.policies",
        "__doc__": "\n    Policy class for actor-critic algorithms (has both policy and value prediction).\n    Used by A2C, PPO and the likes.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param ortho_init: Whether to use or not orthogonal initialization\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param full_std: Whether to use (n_features x n_actions) parameters\n        for the std instead of only (n_features,) when using gSDE\n    :param sde_net_arch: Network architecture for extracting features\n        when using gSDE. If None, the latent features from the policy will be used.\n        Pass an empty list to use the states as features.\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param squash_output: Whether to squash the output using a tanh function,\n        this allows to ensure boundaries when using gSDE.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    ",
        "__init__": "<function ActorCriticPolicy.__init__ at 0x7f96726e0170>",
        "_get_constructor_parameters": "<function ActorCriticPolicy._get_constructor_parameters at 0x7f96726e0200>",
        "reset_noise": "<function ActorCriticPolicy.reset_noise at 0x7f96726e0290>",
        "_build_mlp_extractor": "<function ActorCriticPolicy._build_mlp_extractor at 0x7f96726e0320>",
        "_build": "<function ActorCriticPolicy._build at 0x7f96726e03b0>",
        "forward": "<function ActorCriticPolicy.forward at 0x7f96726e0440>",
        "_get_latent": "<function ActorCriticPolicy._get_latent at 0x7f96726e04d0>",
        "_get_action_dist_from_latent": "<function ActorCriticPolicy._get_action_dist_from_latent at 0x7f96726e0560>",
        "_predict": "<function ActorCriticPolicy._predict at 0x7f96726e05f0>",
        "evaluate_actions": "<function ActorCriticPolicy.evaluate_actions at 0x7f96726e0680>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc_data object at 0x7f96726a9810>"
    },
    "verbose": 1,
    "policy_kwargs": {
        ":type:": "<class 'dict'>",
        ":serialized:": "gASVgQAAAAAAAAB9lCiMD29wdGltaXplcl9jbGFzc5SME3RvcmNoLm9wdGltLnJtc3Byb3CUjAdSTVNwcm9wlJOUjBBvcHRpbWl6ZXJfa3dhcmdzlH2UKIwFYWxwaGGURz/vrhR64UeujANlcHOURz7k+LWI42jxjAx3ZWlnaHRfZGVjYXmUSwB1dS4=",
        "optimizer_class": "<class 'torch.optim.rmsprop.RMSprop'>",
        "optimizer_kwargs": {
            "alpha": 0.99,
            "eps": 1e-05,
            "weight_decay": 0
        }
    },
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "gASVmgEAAAAAAACMDmd5bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBXNoYXBllEsEhZSMA2xvd5SMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlGgGjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwSFlGgKiUMQAAAAAAAAAAAAAAAAAAAAAJR0lGKMBGhpZ2iUaBJoFEsAhZRoFoeUUpQoSwFLBIWUaAqJQxAAAIA/AACAPwAAgD8AAIA/lHSUYowNYm91bmRlZF9iZWxvd5RoEmgUSwCFlGgWh5RSlChLAUsEhZRoB4wCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYolDBAEBAQGUdJRijA1ib3VuZGVkX2Fib3ZllGgSaBRLAIWUaBaHlFKUKEsBSwSFlGgqiUMEAQEBAZR0lGKMCl9ucF9yYW5kb22UTnViLg==",
        "dtype": "float32",
        "shape": [
            4
        ],
        "low": "[0. 0. 0. 0.]",
        "high": "[1. 1. 1. 1.]",
        "bounded_below": "[ True  True  True  True]",
        "bounded_above": "[ True  True  True  True]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "gASVkAEAAAAAAACMDmd5bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBXNoYXBllEsDhZSMA2xvd5SMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlGgGjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwOFlGgKiUMMCtejPa5HYT4Ursc+lHSUYowEaGlnaJRoEmgUSwCFlGgWh5RSlChLAUsDhZRoColDDOxROD4K16M+SOH6PpR0lGKMDWJvdW5kZWRfYmVsb3eUaBJoFEsAhZRoFoeUUpQoSwFLA4WUaAeMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGKJQwMBAQGUdJRijA1ib3VuZGVkX2Fib3ZllGgSaBRLAIWUaBaHlFKUKEsBSwOFlGgqiUMDAQEBlHSUYowKX25wX3JhbmRvbZROdWIu",
        "dtype": "float32",
        "shape": [
            3
        ],
        "low": "[0.08 0.22 0.39]",
        "high": "[0.18 0.32 0.49]",
        "bounded_below": "[ True  True  True]",
        "bounded_above": "[ True  True  True]",
        "_np_random": null
    },
    "n_envs": 1,
    "num_timesteps": 25000,
    "_total_timesteps": 25000,
    "seed": null,
    "action_noise": null,
    "start_time": 1629753943.008966,
    "learning_rate": 0.0007,
    "tensorboard_log": null,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gASVCQMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwNX2J1aWx0aW5fdHlwZZSTlIwKTGFtYmRhVHlwZZSFlFKUKGgCjAhDb2RlVHlwZZSFlFKUKEsBSwBLAUsBSxNDBIgAUwCUToWUKYwBX5SFlIxtL1VzZXJzL21jY18zMTEvb3B0L2FuYWNvbmRhMy9lbnZzL3B5dGhvblByb2plY3QvbGliL3B5dGhvbjMuNy9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZSMBGZ1bmOUS31DAgABlIwDdmFslIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMbS9Vc2Vycy9tY2NfMzExL29wdC9hbmFjb25kYTMvZW52cy9weXRob25Qcm9qZWN0L2xpYi9weXRob24zLjcvc2l0ZS1wYWNrYWdlcy9zdGFibGVfYmFzZWxpbmVzMy9jb21tb24vdXRpbHMucHmUdU5OaACMEF9tYWtlX2VtcHR5X2NlbGyUk5QpUpSFlHSUUpSMHGNsb3VkcGlja2xlLmNsb3VkcGlja2xlX2Zhc3SUjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoIH2UfZQoaBdoDowMX19xdWFsbmFtZV9flIwZY29uc3RhbnRfZm4uPGxvY2Fscz4uZnVuY5SMD19fYW5ub3RhdGlvbnNfX5R9lIwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBiMB19fZG9jX1+UTowLX19jbG9zdXJlX1+UaACMCl9tYWtlX2NlbGyUk5RHP0bwBo24useFlFKUhZSMF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4="
    },
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gASVmgAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlIwFbnVtcHmUjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwFLBIaUaAOMBWR0eXBllJOUjAJmNJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiiUMQsActurDUg7steDO8LyfUO5R0lGIu"
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gASViQAAAAAAAACMFW51bXB5LmNvcmUubXVsdGlhcnJheZSMDF9yZWNvbnN0cnVjdJSTlIwFbnVtcHmUjAduZGFycmF5lJOUSwCFlEMBYpSHlFKUKEsBSwGFlGgDjAVkdHlwZZSTlIwCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYolDAQCUdJRiLg=="
    },
    "_last_original_obs": null,
    "_episode_num": 0,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gASVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 5000,
    "n_steps": 5,
    "gamma": 0.99,
    "gae_lambda": 1.0,
    "ent_coef": 0.0,
    "vf_coef": 0.5,
    "max_grad_norm": 0.5,
    "normalize_advantage": false
}